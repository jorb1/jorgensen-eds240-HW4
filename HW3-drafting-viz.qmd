---
title: "HW#3 - Drafting Viz"
author: "Bailey Jørgensen"
format: html
editor: visual
---

1.  Which option do you plan to pursue? It’s okay if this has changed since HW #1.

*I still intend to pursue option 1, which is creating an infographic*

2.  Restate your question(s). Has this changed at all since HW #1? If yes, how so?

*Based on how data exploration is going so far, as well as changing interests of mine, I have decided to change the question that I am asking with my data. Rather than try to examine kelp coverage over time, I am going to explore understanding kelp coverage in the present day, and how kelp coverage is represented in MPAs.*

*Specifically, my new question will be: Does emergent kelp coverage receive protection in California MPAs?*

3.  Explain which variables from your data set(s) you will use to answer your question(s), and how.

*Kelp coverage is variable, and changes by season. So, the dataset I have is divided into 'quarters' for each year. I will calculate the maximum extent of kelp for the year 2024, which is the most recent complete year in the dataset. That is the variable I will use for the map portion of the infographic. For the sorted stream graph, I will pull the variables that represent the max extent for each of the four seasons represented in 2024.*

*Next, I have a shape file that contains all of the current boundaries for California MPAs. (This is a new dataset I am incorporating since the initial proposal. I got it from my capstone client, and have already been working with it, so I know its a good one!) I will use the spatial boundaries from this to overlay the MPAs with the kelp data, in order to do calculations and visualizations about kelp within MPAs, versus kelp outside of MPAs.*

*Both of these datasets and these variables will be sufficient for all three aspects of my infographic. The map will be the boundaries overlaid with the kelp max-extent data, and will be a visual example of where the MPAs are situated, and how much area they cover. By using the boundaries file to crop the kelp data, I can use map-algebra to calculate the overall percentage of max kelp cover protected inside MPAs, which will inform my pictograph percentage viz. Finally, the sorted stream graph will have the max extents per season over latitude, so viewers can understand how kelp coverage varies so much between season, and also get a sense of the variation up the coast latitude. All in all, the infographic will show how much kelp coverage is protected inside MPAs, and also understand that the variability in canopy coverage has an effect on this number.*

4.  In HW #2, you created some exploratory data viz to better understand your data. You may already have some ideas of how you plan to formally visualize your data, but it’s incredibly helpful to look at visualizations by other creators for inspiration. Find at least two data visualizations that you could (potentially) borrow / adapt pieces from. Link to them or download and embed them into your .qmd file, and explain which elements you might borrow (e.g. the graphic form, legend design, layout, etc.).

5.  Hand-draw your anticipated visualizations, then take a photo of your drawing(s) and embed it in your rendered .qmd file – note that these are not exploratory visualizations, but rather your plan for your final visualizations that you will eventually polish and submit with HW #4. You should have:

-   a sketch of your infographic (which should include at least three component visualizations) if you are pursuing option 1

6.  Mock up all of your hand drawn visualizations using code. We understand that you will continue to iterate on these into HW #4 (particularly after receiving feedback), but by the end of HW #3, you should:

-   have your data plotted (if you’re experimenting with a graphic form(s) that was not explicitly covered in class, we understand that this may take some more time to build; you should have as much put together as possible)
-   use appropriate strategies to highlight / focus attention on a clear message
-   include appropriate text such as titles, captions, axis labels
-   experiment with colors and typefaces / fonts
-   create a presentable / aesthetically-pleasing theme (e.g. (re)move gridlines / legends as appropriate, adjust font sizes, etc.)

7.  Answer the following questions:

a.  What challenges did you encounter or anticipate encountering as you continue to build / iterate on your visualizations in R? If you struggled with mocking up any of your three visualizations (from #6, above), describe those challenges here.
b.  What ggplot extension tools / packages do you need to use to build your visualizations? Are there any that we haven’t covered in class that you’ll be learning how to use for your visualizations?
c.  What feedback do you need from the instructional team and / or your peers to ensure that your intended message is clear?


```{r}
#| eval: true
#| echo: false

# Load libraries
librarian::shelf(tidyverse, tidync, sf, rnaturalearth, terra, tmap, tmaptools, spData, spDataLarge, mapdata, RColorBrewer, ggmagnify, grid)
```


## OK gonna pivot to a map thing for now to try and get something turned in for discussion.... we'll see

```{r}
#| eval: true
#| echo: false
mpa_boundaries <- sf::st_read(here("data", "MPA_boundaries", "California_Marine_Protected_Areas_[ds582].shp"))
```



```{r}

# Base map with MPAs and US states
rough_mpa <- tm_shape(mpa_boundaries) +
  tm_polygons(col = "hotpink") +
  tm_shape(us_states) +
  tm_polygons(alpha = .10) +
  tm_layout(main.title = "California MPAs",
            main.title.position = "center")

# Filter for Point Lobos
point_lobos <- mpa_boundaries[mpa_boundaries$SHORTNAME == "Point Lobos", ]

# Inset map for Point Lobos
inset_map <- tm_shape(point_lobos) +
  tm_polygons(col = "pink3") +
  tm_layout(bg.color = "white")  # Ensure background visibility

# Plot main map
tmap_mode("plot")
print(rough_mpa)

# Add inset map using viewport
vp <- viewport(x = 0.8, y = 0.2, width = 0.3, height = 0.3, just = c("right", "bottom"))
print(inset_map, vp = vp)


```



```{r}
bathy_200 <- rast(here("data", "bathy_coral_200m.tif"))
```

```{r}
crs(bathy_200) == crs(mpa_boundaries)

# Match CRS
mpa_boundaries <- st_transform(mpa_boundaries, crs = st_crs(bathy_200))

```
```{r}
crs(bathy_200) == crs(mpa_boundaries)
```


```{r}
combined_bb <- st_bbox(st_union(st_as_sfc(st_bbox(bathy_200)), 
                               st_as_sfc(st_bbox(mpa_boundaries))))

bathy200_light <- tm_shape(bathy_200, bbox = combined_bb) +
  tm_raster(style = "equal", n = 6,
            palette = get_brewer_pal("Blues", n = 12, plot = FALSE),
            title = "Bathymetry (meters)") +
  tm_layout(legend.outside = TRUE) +
  tm_shape(mpa_boundaries) +
  tm_polygons(col = "hotpink")


# bathy200_dark <- tm_shape(bathy_200) +
#     tm_raster(style = "equal", n = 6,
#             palette = get_brewer_pal("Blues", n = 12, plot = FALSE),
#             title = "Bathymetry (meters)",
#             colorNA = "black"
#             ) +
#   tm_layout(legend.outside = TRUE)

bathy200_light 
```

```{r}
print(st_crs(bathy_200))
print(st_crs(mpa_boundaries))
```


